## Remember that you can't use concatenated barcode data!! 

# Remove short reads
seqkit seq -m "$min_length" "$input_file" > "$output_file"

#we use flye for the assembly 

flye --meta --nano-raw "$output_file" --out-dir . 

#polishing with minimap2 and racon

#minimap2 with assembly.fasta as input and fastq 

minimap2 -ax map-ont -t 8 assembly.fasta "$output_file" > aln_ass.sam

#racon consensus contruction

racon "$output_file" aln_ass.sam assembly.fasta > polyshed_consensus.fasta

# Step 1: Separate contigs of polyshed_consensus.fasta into individual FASTA files
awk '/^>/{s="polyshed_consensus_"++d".fasta"} {print > s}' polyshed_consensus.fasta

#prepare database before blastn

makeblastdb -in reference.fasta -dbtype nucl -out reference_db


#perform blastn to each contig

blastn -query consensus.fasta -db reference_db -out results.txt -outfmt 6

#download a reference from each with best output in results.txt 

minimap2 -ax map-ont -t 8 best_reference.fasta filtered.fastq > aln_ref.sam

#also in just one command convert to bam, index and sort

samtools view -bS input.sam | samtools sort -o sorted.bam - && samtools index sorted.bam



#convert sorted.bam into fastq file 

samtools fastq sorted.bam > sorted.fastq

#use script to find and save as fasta file the longest read

#!/bin/bash

fastq_file="sorted.fastq"  # Replace with the path to your FASTQ file
fasta_file="longest_read.fasta"  # Replace with the desired path for the output FASTA file

max_length=0
longest_header=""
longest_sequence=""

# Read the FASTQ file line by line
while IFS= read -r header && IFS= read -r sequence && IFS= read -r plus && IFS= read -r quality; do
    length=${#sequence}

    if (( length > max_length )); then
        max_length=$length
        longest_header="$header"
        longest_sequence="$sequence"
    fi
done < "$fastq_file"

# Save the longest read as a FASTA file
printf ">%s\n%s\n" "${longest_header#*@}" "$longest_sequence" > "$fasta_file"



